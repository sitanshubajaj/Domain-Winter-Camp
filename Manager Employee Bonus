#include <iostream>
#include <string>
using namespace std;


class Employee {
protected:
    string name;
    int id;
    double salary;

public:
    Employee(string name, int id, double salary) : name(name), id(id), salary(salary) {}

    void displayDetails() const {
        cout << "Employee ID: " << id << endl;
        cout << "Name: " << name << endl;
        cout << "Base Salary: $" << salary << endl;
    }
};


class Manager : public Employee {
private:
    double bonus;

public:
    Manager(string name, int id, double salary, double performanceRating)
        : Employee(name, id, salary) {
        calculateBonus(performanceRating);
    }

    void calculateBonus(double performanceRating) {
        if (performanceRating >= 4.5) {
            bonus = salary * 0.2;
        } else if (performanceRating >= 3.5) {
            bonus = salary * 0.1;
        } else {
            bonus = 0;
        }
    }

    void displayTotalEarnings() const {
        displayDetails();
        cout << "Bonus: $" << bonus << endl;
        cout << "Total Earnings: $" << (salary + bonus) << endl;
    }
};

// Derived class: Developer
class Developer : public Employee {
private:
    double overtimeCompensation;

public:
    Developer(string name, int id, double salary, int extraHoursWorked)
        : Employee(name, id, salary) {
        calculateOvertime(extraHoursWorked);
    }

    void calculateOvertime(int extraHoursWorked) {
        double hourlyRate = salary / 160;
        overtimeCompensation = extraHoursWorked * hourlyRate * 1.5;
    }

    void displayTotalEarnings() const {
        displayDetails();
        cout << "Overtime Compensation: $" << overtimeCompensation << endl;
        cout << "Total Earnings: $" << (salary + overtimeCompensation) << endl;
    }
};

int main() {
    string name;
    int id;
    double salary;

    cout << "Enter Manager Details (Name ID Salary PerformanceRating):\n";
    cout << "Name: ";
    cin >> ws;
    getline(cin, name);
    cout << "ID: ";
    cin >> id;
    cout << "Salary: ";
    cin >> salary;
    cout << "Performance Rating (0.0 - 5.0): ";
    double performanceRating;
    cin >> performanceRating;

    Manager manager(name, id, salary, performanceRating);

    cout << "\nEnter Developer Details (Name ID Salary ExtraHoursWorked):\n";
    cout << "Name: ";
    cin >> ws;
    getline(cin, name);
    cout << "ID: ";
    cin >> id;
    cout << "Salary: ";
    cin >> salary;
    cout << "Extra Hours Worked: ";
    int extraHours;
    cin >> extraHours;

    Developer developer(name, id, salary, extraHours);

    cout << "\n--- Manager's Total Earnings ---\n";
    manager.displayTotalEarnings();

    cout << "\n--- Developer's Total Earnings ---\n";
    developer.displayTotalEarnings();

    return 0;
}
